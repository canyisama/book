<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/5/14
 * Time: 12:00
 */

namespace app\admin\controller;


use app\admin\model\Reser;
use app\admin\model\Sms;
use app\admin\model\SmsTpl;
use app\admin\model\Tsg;
use think\Exception;
use think\Lang;

/**
 * Class SmsController
 * @package app\admin\controller
 * 发送短信控制器
 */
class SmsController extends BaseController
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        Lang::load([APP_PATH . 'lang' . DS . 'zh-cn' . DS . 'home/sms.php']);
    }

    public function get_laveAction()
    {
        $mod_sms = d("Sms");
        $ret = $mod_sms->getLave($this->_user_info["tsg_code"]);

        if ($ret !== false) {
            $this->success('获取账户余额成功','',$ret);
        } else {
            $this->error('获取账户余额失败' . $mod_sms->getError());
        }
    }

    public function indexAction()
    {
        $status_lists = Sms::get_status_list();
        $this->assign('status_lists',$status_lists);
        return view();
    }

    public function tplAction()
    {
        $status_lists = SmsTpl::get_tpl_type_list();
        $this->assign('status_lists',$status_lists);
        return view();
    }

    public function getListAction()
    {
        $source = input('source', 'sms');
        $condition = [];
        $condition['tsg_code'] = $this->adminInfo['tsg_code'];
        $param = $this->getQueryParams();
        if ($param->search){
            foreach ($param->search as $search){
                switch ($search->field){
                    case 'send_status':
                        $condition[$search['field']] = $search['value'];
                        break;
                    case 'tpl_type':
                        $condition[$search['field']] = $search['value'];
                        break;
                    default :
                        $condition[$search['field']] = ['like',['%'.$search['value'].'%']];
                }
            }
        }

        if ($source === 'sms'){
            $list = Sms::getPageList($condition, $param->limit, $param->order);
            $count = Sms::getCount($condition);
        }else{
            $list = SmsTpl::getPageList($condition, $param->limit, $param->order);
            $count = SmsTpl::getCount($condition);
        }

        return $this->echoPageData($list,$count);
    }


    /**
     * @return \think\response\View
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 短信配置
     */
    public function configAction()
    {
        $where['tsg_code'] = $this->adminInfo['tsg_code'];
        $tsg_info = Tsg::field("sms_cnf,is_sms")->where($where)->find();
        $config_info = unserialize($tsg_info["sms_cnf"]);

        if ($this->request->isPost()) {
            try{
                $data = $this->request->post();

                $sms_pwd = $data['sms_pwd'] ? trim($data['sms_pwd']) : '';
                $add_data = array(
                    'sms_user' => isset($data['sms_user']) ? trim($data['sms_user']) : '',
                    "sms_pwd" => $sms_pwd ?: $config_info['sms_pwd'],
                    "test_sms" => isset($data["test_sms"]) ? trim($data["test_sms"]) : ""
                );

                if (!$add_data["sms_user"]) {
                    $this->error(l('sms_user_required'));
                }

                if (!$add_data["sms_pwd"]) {
                    $this->error(l('sms_pwd_required'));
                }

                import('smsapi', EXTEND_PATH, '.class.php');
                $api = new \SmsApi($add_data['sms_user'],$add_data['sms_pwd']);

                $param = [
                    'title' => '测试',
                    'content'=>'这是一封测试短信,如收到说明短信参数配置成功!【'.$this->adminInfo['tsg_name'].'】',
                    'dataformat' => 1
                ];

                $result = $api->tpl($param);
                if ($result['stat'] == 100 || $result['stat'] == 166){
                    $is_sms = (isset($data["is_sms"]) ? intval($data["is_sms"]) : 0);
                    $save_data = array("sms_cnf" => serialize($add_data), "is_sms" => $is_sms);
                    $is_success = Tsg::update($save_data,$where,true)->result;
                    if ($is_success === false) {
                        $this->error('保存短信配置失败');
                    }
                    $this->success('保存短信配置成功,如需测试请稍等5-10分钟审核！');
                }
                $this->error($result['message']);
            }catch (Exception $e){
                $this->error($e->getMessage());
            }
        }

        $config_info['is_sms'] = isset($tsg_info['is_sms']) ? $tsg_info['is_sms'] : 0;
        $this->assign("info", $config_info);
        return view();
    }

    public function testAction()
    {
        $to_sms = input('to_sms')?trim(input('to_sms')):'';
        if (!$to_sms) {
            $this->error('无效的测试手机号码');
        }

        $config_info = Tsg::field('sms_cnf')->where(['tsg_code'=>$this->adminInfo['tsg_code']])->find();
        $config_info = unserialize($config_info["sms_cnf"]);
        if (!$config_info || empty($config_info["sms_user"])) {
            $this->error('请先配置短信参数并保存');
        }

        import('smsapi', EXTEND_PATH, '.class.php');
        $api = new \SmsApi($config_info['sms_user'],$config_info['sms_pwd']);

        $content = "这是一封测试短信,如收到说明短信参数配置成功!【".$this->adminInfo["tsg_name"]."】";
        $result = $api->sendAll($to_sms,$content);
        if ($result['stat'] == 100) {
            $this->success('测试短信发送成功');
        }
        else {
            $this->error('测试短信发送失败:' . $result['message']);
        }
    }

    public function sendnoticeAction()
    {
        $tpl_type = input('tpl_type/d',0);
        $sms_tpl_info = SmsTpl::field('sms_tpl_id,templateid')->where(['tsg_code'=>$this->adminInfo['tsg_code'],'tpl_type'=>$tpl_type])->find();
        $notice_type_list = SmsTpl::get_tpl_type_list();
        $this->assign("sms_tpl_info", $sms_tpl_info);
        $this->assign("notice_type_list", $notice_type_list);
        return view();
    }

    public function loadtplAction()
    {
        try {
            $sms_tpl_id = input('get.sms_tpl_id/d', 0);
            if (empty($sms_tpl_id)) {
                $this->error('模板id为空');
            }

            $sms_tpl_info = SmsTpl::field("tpl_body,tpl_type,templateid")->where(['sms_tpl_id' => $sms_tpl_id])->find();

            if (empty($sms_tpl_info)) {
                $this->error('未找到模板');
            }

            $label_list = SmsTpl::get_lable_list($sms_tpl_info->getData('tpl_type'));

            $label_list = array_keys($label_list);
            $data = input('data/a',[]);
            $zd = array_keys($data);
            $val = array_values($data);
            $ext_data = array("tsg" => $this->_user_info["tsg_name"], "date" => date("Y-m-d"));

            foreach ($zd as $key => $item) {
                $tmp_zd = '{$' . $item . "}";
                $tmp_str = (isset($val[$key]) ? trim($val[$key]) : "");

                if (in_array($tmp_zd, $label_list)) {
                    $ext_data[$item] = $tmp_str;
                }
            }
//            print_r($sms_tpl_info);exit();
            SmsTpl::parseTpl($sms_tpl_info, $ext_data, $sms_tpl_info->getData('tpl_type'));
            $this->success('', '', $sms_tpl_info);
        }catch (Exception $e){
            $this->error($e->getMessage());
        }
    }

    public function sendsmsAction()
    {
        $where['tsg_code'] = $this->adminInfo['tsg_code'];
        $config_info = Tsg::field("sms_cnf")->where($where)->find();
        $config_info = unserialize($config_info["sms_cnf"]);
//        header("Content-Type:text/html;charset=utf-8");

        if (!$this->request->isPost()) {
            if (!$config_info || empty($config_info["sms_user"])) {
                $this->alertMsg('短信未配置,请先配置短信参数并保存!');
            }
            $sms_tpl_lists = SmsTpl::get_list($this->adminInfo['tsg_code']);
            $this->assign("sms_tpl_lists", $sms_tpl_lists);
            $this->assign("info", $config_info);
            return view();
        }
        try {
            $data = $this->request->post('data/a');

            $reser_id = input('reser_id/d',0);
            if (!$config_info || empty($config_info["sms_user"])) {
                $this->error('短信未配置,请先配置短信参数并保存!');
            }
            if (!$data['phone_mob']){
                $this->error('手机号为空');
            }

            $mod_sms = new Sms();
            $add_data = $mod_sms->genData($this->adminInfo["tsg_code"], $data, $this->adminInfo["user_name"]);

            if ($add_data === false) {
                $this->error('短信发送失败,生成短信数据时遇到错误:'.$mod_sms->getError());
            }

            $sms_info = Sms::create($add_data);

            if ($sms_info->result === false) {
                $this->error('短信发送失败,添加短信数据出现错误');
            }

            $label_list = SmsTpl::get_lable_list($data['tpl_type']);

            $label_list = array_keys($label_list);
            $data = input('data/a',[]);
            $zd = array_keys($data);
            $val = array_values($data);
            $ext_data = array("tsg" => $this->_user_info["tsg_name"], "date" => date("Y-m-d"));

            foreach ($zd as $key => $item) {
                $tmp_zd = '{$' . $item . "}";
                $tmp_str = (isset($val[$key]) ? trim($val[$key]) : "");

                if (in_array($tmp_zd, $label_list)) {
                    $ext_data[$item] = $tmp_str;
                }
            }

//            $is_success = $mod_sms->send($this->adminInfo["tsg_code"],$data,$ext_data);

            $is_success = true;
            if ($is_success === true) {
                Sms::setOk($sms_info['sms_id']);
                Sms::addLog($sms_info['sms_id'],"短信发送成功  操作用户:" . $this->adminInfo["user_name"]);
                if ($reser_id){
                    Reser::onNotice($this->adminInfo['tsg_code'], $reser_id);
                }
                $this->success('短信发送成功');
            } else {
                Sms::setErr($sms_info['sms_id']);
                Sms::addLog($sms_info['sms_id'],"短信发送失败  操作用户:" . $this->adminInfo["user_name"]);
                $this->error('短信发送失败:'. $mod_sms->getError());
            }
        }
        catch (Exception $e){
            $this->error($e->getMessage());
        }
    }

    /**
     * @return string
     * @throws Exception
     * 短信查看
     */
    public function showAction()
    {
//        header("Content-Type:text/html;charset=utf-8");
        $sms_id = input('sms_id/d');
        $sms_info = Sms::get($sms_id);
        if ($sms_info['send_log']){
            $sms_info["send_log"] = nl2br(implode("\\r\\n", unserialize($sms_info["send_log"])));
        }
        $status_list = Sms::get_status_list();
        $sms_info['send_status'] = $status_list[$sms_info['send_status']];
        $this->assign("info", $sms_info);
        return view();
    }

    public function addtplAction()
    {
        if ($this->isPost){
            $data = $this->request->post();

            if (!$data['tpl_name']) {
                $this->error(l('tpl_name_required'));
            }

            if (!$data['tpl_body']) {
                $this->error(l('tpl_body_required'));
            }

            if (!empty($data["tpl_type"])) {
                if (!SmsTpl::unique($this->_user_info["tsg_code"], $data["tpl_type"])) {
                    $this->error(l("tpl_name_exist"));
                }
            }

            $param = [
                'title' => $data['tpl_name'],
                'content'=>$data['tpl_body'].'    【'.$this->_user_info['tsg_name'].'】',
            ];
            $sms_tpl = new SmsTpl();
            $result = $sms_tpl->tpl($param,$this->adminInfo['tsg_code']);

            if ($result !== false){
                $data["tsg_code"] = $this->_user_info["tsg_code"];
                $data['templateid'] = $result;
                $is_success = SmsTpl::create($data, true)->result;
                if ($is_success !== false) {
                    $this->success('新增成功,请稍等5-10分钟审核！');
                }
                else {
                    $this->error('新增失败！');
                }
            }else{
                $this->error($sms_tpl->getError());
            }
        }

        $this->_assign_tpl();
        return view('edit');
    }

    public function edittplAction()
    {
        $sms_tpl_id = input('sms_tpl_id/d', 0);
        $sms_tpl_info = SmsTpl::get(['sms_tpl_id'=>$sms_tpl_id]);

        if (!$this->isPost) {
            if (!$sms_tpl_info) {
                $this->alertMsg(l('not_found_data'));
            }
            if ($sms_tpl_info["tsg_code"] != $this->_user_info["tsg_code"]) {
                $this->alertMsg(l('not_access_edit_data'));
            }
            if (!$sms_tpl_info['templateid']){
                $this->alertMsg('模板id不存在');
            }
            $this->_assign_tpl();
            $this->assign("info", $sms_tpl_info);
            return view('edit');
        }
        else {
            if (!$sms_tpl_info) {
                $this->error(l('not_found_data'));
            }

            if ($sms_tpl_info["tsg_code"] != $this->_user_info["tsg_code"]) {
                $this->error(l('not_access_edit_data'));
            }

            if (!$sms_tpl_info['templateid']){
                $this->error('模板id不存在');
            }

            $save_data = $this->request->post();

            if (!$save_data["tpl_name"]) {
                $this->error(l('tpl_name_required'));
            }

            if (!$save_data["tpl_body"]) {
                $this->error(l('tpl_body_required'));
            }

            if (!empty($save_data["tpl_type"])) {
                if (!SmsTpl::unique($this->_user_info["tsg_code"], $save_data["tpl_type"], $sms_tpl_id)) {
                    $this->error(l("tpl_name_exist"));
                }
            }

            $result = true;
            if ($sms_tpl_info['tpl_body'] != $save_data['tpl_body'] || $sms_tpl_info['tpl_name'] != $save_data['tpl_name']) {
                $param = [
                    'title' => $save_data['tpl_name'],
                    'content' => $save_data['tpl_body'].'    【'.$this->_user_info['tsg_name'].'】',
                    'templateid'=>$sms_tpl_info['templateid']
                ];
                $result = $sms_tpl_info->tpl($param, $this->adminInfo['tsg_code']);
                $save_data['verify'] = SmsTpl::TPL_VERIFY_ADD;
            }

            if ($result !== false){
                unset($save_data["sms_tpl_id"]);
                unset($save_data["tsg_code"]);
                $is_success = $sms_tpl_info::update($save_data,['sms_tpl_id'=>$sms_tpl_id],true)->result;
                if ($is_success !== false) {
                    $this->success('保存成功,请稍等5-10分钟审核!');
                }
                else {
                    $this->error('保存失败！');
                }
            }
            $this->error($sms_tpl_info->getError());
        }
    }

    public function droptplAction()
    {
        $sms_tpl_id = input('sms_tpl_id/d');
        $sms_tpl_info = SmsTpl::get(['sms_tpl_id'=>$sms_tpl_id]);

        if (!$sms_tpl_info) {
            $this->error(l('not_found_data'));
        }
        if ($sms_tpl_info["tsg_code"] != $this->_user_info["tsg_code"]) {
            $this->error(l('not_access_edit_data'));
        }
        if (!$sms_tpl_info['templateid']){
            $this->error('模板id不存在');
        }
        $param = [
            'templateid' => $sms_tpl_info['templateid'],
            'delete' => 1
        ];

        $result = $sms_tpl_info->tpl($param, $this->adminInfo['tsg_code']);

        if ($result !== false){
            $is_success = $sms_tpl_info->delete();
            if ($is_success === false){
                $this->error('删除失败');
            }
            $this->success('删除成功');
        }
        $this->error($sms_tpl_info->getError());
    }

    public function getVerifyAction()
    {
        $templateid = input('templateid',0);
        if (!$templateid){
            $this->error('模板id不存在');
        }
        $sms_tpl = new SmsTpl();
        $result = $sms_tpl->verify($templateid,$this->adminInfo['tsg_code']);
        if ($result === false){
            $this->error($sms_tpl->getError());
        }
        $this->success('更新成功');
    }

    /**
     * 根据ajax传输模板类型获取标签数组
     */
    public function getLabelListsAction()
    {
        $tpl_type = input('get.tpl_type/d',0);
//        return $this->formatReturn(true,'ok',$tpl_type);
        $label_lists = SmsTpl::get_lable_list($tpl_type);
        $this->success('','',$label_lists);
    }

    private function _assign_tpl()
    {
        $tpl_type_list = SmsTpl::get_tpl_type_list();
        $this->assign("tpl_type_lists", $tpl_type_list);
        $tpl_label_list = SmsTpl::get_lable_list();
        $this->assign("tpl_label_lists", $tpl_label_list);
    }

}